using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Forms;
using VectorLandMesh.Land;
namespace Brave_New_World
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

            //
            int meshOnLevel = 0;
            
            //odds map will be generated by Map settings
            int[] oddsMap={1,1,1,2,2,2,3,3,3,4,4,4};

            /*  CONSTS: Need To replace with class for map Properties
             * MAX_SECTIONS     : Max number of section each contor is divide in to.
             * MAX_LENGTH       : Max length of each Contours Vector
             * LEVELS           : Number of Levels for each mesh.
             * min number of Land Meshes per level
             */
            const int MAX_SECTIONS = 24, MAX_LENGTH = 10, LEVELS = 12;
            //test for map data. will be set in to class latter
            List<LandMesh> mapMeshData = new List<LandMesh>();
            //used later in loop on [Line 46]
            LandMesh land;

            //create New Random Class to create new random numbers
            //eventuly this will be seeded by a text box;
            Random randNumGen = new Random();
            meshOnLevel = oddsMap[randNumGen.Next(0, oddsMap.Length - 1)];
            oddsMap[oddsMap.Length - 1] = 0;

            for (int x = LEVELS; x > 0;x--)
            {
                //adds new Contor for existing meshes.
                
                foreach (LandMesh mesh in mapMeshData)
                {
                    mesh.addNewContour(ref randNumGen);
                }

                for (int y = meshOnLevel; y > 0; y--)
                {
                    land = new LandMesh(ref randNumGen);
                    mapMeshData.Add(land);
                }
                //grabs a randum number form an odds tabble.
                meshOnLevel = oddsMap[randNumGen.Next(0, oddsMap.Length - 1)];
            }
            //adds new Contor for existing meshes.
            foreach (LandMesh mesh in mapMeshData)
            {
                //add new contour to the end of every mesh
                mesh.addNewContour(ref randNumGen);
            }

            //soon to be removed for Class Structure
            List<List<List<Vector>>> mapdata = new List<List<List<Vector>>>();

            mapdata.Add(new List<List<Vector>>());
            mapdata[0].Add(new List<Vector>());
            double theata = randNumGen.Next(1, MAX_SECTIONS);
            int r = randNumGen.Next(1, MAX_LENGTH);
            mapdata[0][0].Add(new Vector(Math.Cos(Math.PI * theata / (MAX_SECTIONS / 2)) * r, Math.Sin(Math.PI * theata / (MAX_SECTIONS / 2))) * r);
            Vector d = mapdata[0][0][0];
            MessageBox.Show(String.Format("[{3},{4}] | [{0},{1}], length of {2}", d.X, d.Y, d.Length, theata * 360 / MAX_SECTIONS,r));
        }
    }
}
